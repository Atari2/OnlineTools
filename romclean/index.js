const e=new Uint8Array(512);e[0]=64;const t=new Uint8Array([8,56,229,49,254,34,192,119,82,143,235,225,76,179,255,124,73,47,31,95,168,222,53,65,146,189,255,113,55,194,127,91]),n=new Uint8Array([198,128,142,8,42,179,67,190,85,77,7,242,179,235,21,124,60,81,52,179,100,162,255,179,128,106,103,241,126,9,146,208]);function s(e,t){if(e.byteLength!==t.byteLength)return!1;for(let n=0;n<e.byteLength;n+=1)if(e[n]!==t[n])return!1;return!0}export default function(r){r.setStatus({message:"No ROM selected."});const a=r.byID("file");a.addEventListener("change",(i=>{const l=i.target.files[0];null==l?r.setStatus({message:"No ROM selected."}):(a.disabled=!0,l.arrayBuffer().then((r=>async function(r,a){const i=[];let l=r,o=a;if(!r.endsWith(".smc")){const e=r.lastIndexOf(".");l=`${-1===e?r:r.slice(0,e)}.smc`,i.push("✨ Fixing file extension")}const c=a.byteLength;if(524288!==c&&524800!==c)return{error:"ROM has wrong size. Couldn't clean the ROM."};let u;return u=0==(32767&c)?new Uint8Array(await window.crypto.subtle.digest("SHA-256",a)):new Uint8Array(await window.crypto.subtle.digest("SHA-256",a.slice(512))),s(u,t)?(0==(32767&c)?(i.push("✨ Adding header"),o=new Uint8Array(524800),o.set(e,0),o.set(a,512)):s(a.slice(0,512),e)||(i.push("✨ Fixing header"),o=new Uint8Array(524800),o.set(e,0),o.set(a.slice(512),512)),l===r&&o===a?{success:"Your ROM is already clean."}:(i.push("✔️ Your ROM is now clean."),{message:i.join("\r\n"),file:{name:l,data:o}})):s(u,n)?{error:"This is a Japanese ROM. Couldn't clean the ROM."}:{error:"ROM has wrong contents. Couldn't clean the ROM."}}(l.name,new Uint8Array(r)))).then((e=>{if(r.setStatus(e),null!=e.file)return r.download(e.file.name,new Blob([e.file.data],{type:"application/octet-stream"}))})).catch((e=>{console.log(e),r.setStatus({error:"Internal error."})})).finally((()=>{a.disabled=!1,a.value=null})))}))}